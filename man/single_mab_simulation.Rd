% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_mab_simulation.R
\name{single_mab_simulation}
\alias{single_mab_simulation}
\title{Run One Adaptive Simulation With Inference.}
\usage{
single_mab_simulation(
  data,
  assignment_method,
  algorithm,
  conditions,
  prior_periods,
  perfect_assignment,
  whole_experiment,
  blocking,
  data_cols,
  control_augment = 0,
  time_unit = NULL,
  period_length = NULL,
  block_cols = NULL,
  verbose = FALSE,
  ndraws = 5000,
  random_assign_prop = 0
)
}
\arguments{
\item{data}{A data.frame, data.table, or tibble containing input data from the trial. This should be the results
of a traditional Randomized Controlled Trial (RCT). data.frames will be converted to tibbles internally.}

\item{assignment_method}{A character string; one of "Date", "Batch", or "Individual", to define the assignment into treatment waves. When using
"Batch" or "Individual", ensure your dataset is pre-arranged in the proper order observations should be considered so that
groups are assigned correctly. For "Date", observations will be considered in chronological order.
"Individual" assignment can be time-consuming for larger datasets.}

\item{algorithm}{A character string specifying the MAB algorithm to use. Options are "Thompson" or "UCB1".}

\item{conditions}{A named character vector containing treatment conditions. The elements
of this vector should be the names of each treatment as seen in your data, so to create it you can simply call
\code{unique(df[[condition_col_name]])}. The names of each element are used to reference the contents but are not inherently important;
choose names that are meaningful and consistent. If \code{control_augment} > 0, then the control condition
of the trial in this vector must have the name "Control".}

\item{prior_periods}{A numeric value of length 1, or the character string "All"; number of previous periods to use
in the treatment assignment model. This is used to implement the stationary/non-stationary bandit.
For example, a non-stationary bandit assumes the true probability of success for each treatment changes over time, so to
account for that, not all prior data should be used when making decisions because it could be "out of date".}

\item{perfect_assignment}{A logical value; if TRUE, assumes perfect information for treatment assignment
(i.e., all outcomes are observed regardless of the date).
If FALSE, hides outcomes not yet theoretically observed, based
on the dates treatments would have been assigned for each wave.
This is useful when simulating batch-based assignment where treatments were assigned
on a given day whether or not all the information from a prior batch was available and
you have exact dates treatments were assigned.}

\item{whole_experiment}{A logical value; if TRUE, uses all past experimental data for imputing outcomes.
If FALSE, uses only data available up to the current period. In large datasets or with a high number
of periods, setting this to FALSE can be more computationally intensive, though not a significant
contributor to total runtime.}

\item{blocking}{A logical value; whether or not to use treatment blocking. Treatment blocking is used to ensure an even-enough
distribution of treatment conditions across blocks. For example, blocking by gender would mean the randomized assignment should
split treatments evenly not just throughout the sample (so for 4 arms, 25-25-25-25), but also within each block, so 25\% of men
would receive each treatment and 25\% of women the same.}

\item{data_cols}{A named character vector containing the names of columns in \code{data} as strings:
\itemize{
\item \code{id_col}: Column in \code{data}; contains unique ID as a key.
\item \code{success_col}: Column in \code{data}; binary successes from the original experiment.
\item \code{condition_col}: Column in \code{data}; original treatment condition for each observation.
\item \code{date_col}: Column in \code{data}; contains original date of event/trial. Only necessary when assigning by "Date". Must be of type \code{Date}, not a character string.
\item \code{month_col}: Column in \code{data}; contains month of treatment. Only necessary when \code{time_unit = "Month"}. This can be a string or factor variable
containing the names or numbers of months.
\item \code{success_date_col}: Column in \code{data}; contains original dates each success occurred. Only necessary when \code{perfect_assignment = FALSE}. Must be of type \code{Date}, not a character string.
\item \code{assignment_date_col}: Column in \code{data}; contains original dates treatments were assigned to observations. Only necessary when \code{perfect_assignment = FALSE}.
Used to simulate imperfect information on the part of researchers conducting an adaptive trial. Must be of type \code{Date}, not a character string.
}}

\item{control_augment}{A numeric value ranging from 0 to 1; proportion of each wave guaranteed to receive the "Control" treatment.
Default is 0. It is not recommended to use this in conjunction with \code{random_assign_prop}}

\item{time_unit}{A character string specifying the unit of time for assigning periods when \code{assignment_method} is "Date".
Acceptable values are "Day", "Week", or "Month". "Month" is a special case that is useful when an experiment
defines the months differently then the genuine dates, i.e. an experiment considers August as starting
the in the second half of July, or when exact calender months are required for the periods, not just
a lengths of time in the month range. As such it requires an additional column to be provided,
with the exact month desired for each observation, and it treats each observation
as occurring on the first of that month. It is also useful when dates are not provided, here
synthetic dates should be created placing each observation on the first on its specified month.}

\item{period_length}{A numeric value of length 1; represents the length of each treatment period.
If assignment method is "Date", this refers to the
length of periods by your specified \code{time_unit} (i.e., if "Day", 10 would be 10 days).
If assignment method is "Batch", this refers to the number of people in each batch. This factor
contributes most to the computational cost of calling the function, as large batch sizes make each iteration of
the simulation run slower, while each additional period adds time because of the extra iterations.
If you have a large dataset, consider passing it as a data.table.}

\item{block_cols}{A character vector of variables to block by. This vector should not be named.}

\item{verbose}{A logical value; whether or not to print intermediate messages. Default is FALSE.}

\item{ndraws}{A numeric value; When Thompson Sampling direct calculations fail, draws from a simulated posterior
will be used to approximate the Thompson Sampling probabilities. This is the number of simulations to use, the default
is 5000 to match the default parameter \code{\link[bandit:best_binomial_bandit_sim]{bandit::best_binomial_bandit_sim()}}, but might need to be raised or lowered depending on perfomance and accuracy
concerns.}

\item{random_assign_prop}{a numeric value ranging from 0 to 1; proportion of each wave to be assigned new treatments randomly,
(1 - \code{random_assign_prop}) is the proportion assigned through the bandit procedure. For example if this is set to 0.1, then
for each wave 10\% of the observations will be randomly assigned to a new treatment, while the remaining 90\% will be assigned according
to UCB1 or Thompson result. It is not recommended to use this in conjunction with \code{control_augment}.}
}
\value{
An object of class \code{mab}, which is a named list containing:
\itemize{
\item \code{final_data}: The processed tibble or data.table, containing new columns pertaining to the results of the trial.
\item \code{bandits}: A tibble or data.table containing the UCB1 statistics or Thompson Sampling posterior distributions for each period.
\item \code{assignment_probs}: A tibble or data.table containing the probability of being assigned each treatment arm at a given period.
\item \code{estimates}: A tibble or data.table containing the
AIPW (Augmented Inverse Probability Weighting) treatment effect estimates and variances, and traditional
sample means and variances, for each treatment arm.
\item \code{settings}: A named list of the configuration settings used in the trial.
\item \code{original_data}: The original \code{data} object passed to the function (data.frame, tibble, or data.table).
}
}
\description{
Performs a single Multi-Arm Bandit (MAB) trial using experimental data from
an original randomized controlled trial, and adaptive inference strategies as described in
Hadad et al. (2021). Wraps around the internal implementation functions, and performs the full
MAB pipeline: preparing inputs, assigning treatments and imputing successes, and adaptively weighted
estimation.
}
\details{
This function simulates a single adaptive Multi-Arm-Bandit trial, using experimental data from
a traditional randomized controlled trial. It is intended to help researchers understand how an adaptive design could have performed
but it is not a substitute for a real experiment, and for that reason it does not generate the synthetic data for the simulation.
The input data should come from a randomized trial to ensure the assumptions made during the simulation are valid.

At each period, either the Thompson Probabilities or UCB1 statistics are calculated based on
the outcomes from the number of \code{prior_periods} specified. New treatments are then assigned randomly using the Thompson
Probabilities via the \href{https://cran.r-project.org/package=randomizr}{randomizr}
package, or as the treatment with the highest UCB1 statistic, while implementing the specific
treatment blocking and control augmentation specified. More details on bandit algorithms can in
\href{https://arxiv.org/abs/1402.6028}{Kuleshov and Precup 2014} and
\href{https://arxiv.org/abs/1904.07272}{Slivkins 2024}. When control augmentation is used
it requires at least the specified proportion be allocated to the control group, at which case the
probabilities of being assigned to each treatment are adjusted to achieve this, while also ensuring
that no probability becomes negative. This is NOT a Contextual bandit,
and as such the package does not support the acceptance of any covariate information nor use
any when performing the bandit-based assignment.

If \code{perfect_assignment} is FALSE, at this step, some of the successes may be masked, if they occurred after
the specified treatment assignment date for that given period, but these will be unmasked in later periods.

After treatments are assigned, observations with new treatments have their outcomes imputed, once again
using the \href{https://cran.r-project.org/package=randomizr}{randomizr} package, with any
specified treatment blocking implemented. The probabilities of success used to impute,
are estimated via the grouped means of successes from the original data, either from the whole trial, or
up to that period, defined by \code{whole_experiment}. If \code{perfect_assignment} is FALSE, only for those
who switched treatments and changed to success have their success date imputed using a grouped average from the
treatment block in the period. However if an observation changed treatment, but had succeeded under the
original experiment, they did not have their date changed.

At the end of the simulation the results are aggregated together to calculate the Adaptively Weighted
Augmented Inverse Probability Estimator (Hadad et al. 2021) using the mean and variance formulas provided, under
the constant allocation rate adaptive schema. These estimators are unbiased and asymptotically normal.

This procedure has the potential to be computationally expensive and time-consuming. Performance
depends on the relative size of each period, number of periods, and overall size of the dataset. This function
supports  data.tables, which are used when passed, but otherwise a combination of dplyr and base R is used.
In general, smaller batches run faster under base R, while larger ones could benefit from the performance
and memory efficiencies provided by data.table. An example dataset with 3,520 observations under individual assignment
takes 20-30 seconds under Base R and 40-50 seconds under data.table. It has also been observed, that larger datasets
at least over a  3 million rows, can cause numerical instability in the calculations. Internal safeguards exist
to prevent this, but to best way to preempt any issues, is to set \code{prior_periods} to a low number.
}
\examples{
 # Loading Example Data and defining conditions
 data(tanf)
 conditions <- c("no_letter", "open_appt", "specific_appt")

 ## Running Thompson Sampling with 500 person large batches,
 ## with no blocks and imperfect assignment

 single_mab_simulation(
   data = tanf,
   assignment_method = "Batch",
   algorithm = "Thompson",
   period_length = 500,
   prior_periods = "All",
   blocking = FALSE,
   whole_experiment = TRUE,
   conditions = conditions,
   perfect_assignment = FALSE,
   data_cols = c(
     condition_col = "condition",
     id_col = "ic_case_id",
     success_col = "success",
     success_date_col = "date_of_recert",
     assignment_date_col = "letter_sent_date"
   )
 )

 ## Running UCB1 Sampling with 1 Month based batches and
 ## control augmentation set to 0.25, with perfect_assignment.
 ## When using control_augment > 0, conditions need to have proper names
 names(conditions) <- c("Control", "T1", "T2")
 # no_letter is control, the others are treatments

 single_mab_simulation(
   data = tanf,
   assignment_method = "Date",
   time_unit = "Month",
   algorithm = "UCB1",
   period_length = 1,
   prior_periods = "All",
   blocking = FALSE,
   whole_experiment = TRUE,
   perfect_assignment = TRUE,
   conditions = conditions,
   control_augment = 0.25,
   data_cols = c(
     condition_col = "condition",
     id_col = "ic_case_id",
     success_col = "success",
     date_col = "appt_date",
     month_col = "recert_month"
   )
 )

 ## If you misspecify or miss an argument, an appropriate error will be given
 ## I specified Month assignment but did not provide a month_column in my data

 try(single_mab_simulation(
   data = tanf,
   assignment_method = "Date",
   time_unit = "Month",
   algorithm = "UCB1",
   period_length = 1,
   prior_periods = "All",
   blocking = FALSE,
   whole_experiment = TRUE,
   perfect_assignment = FALSE,
   conditions = conditions,
   data_cols = c(
     condition_col = "condition",
     id_col = "ic_case_id",
     success_col = "success",
     date_col = "appt_date"
   )
 ))

 # I specified a negative period_length

 try(single_mab_simulation(
   data = tanf,
   assignment_method = "Date",
   time_unit = "Month",
   algorithm = "UCB1",
   period_length = -500,
   prior_periods = "All",
   blocking = FALSE,
   whole_experiment = TRUE,
   perfect_assignment = FALSE,
   conditions = conditions,
   control_augment = 0,
   data_cols = c(
     condition_col = "condition",
     id_col = "ic_case_id",
     success_col = "success",
     date_col = "appt_date"
   )
 ))

 # I forgot to add column containing the successes of the original experiment

 try(single_mab_simulation(
   data = tanf,
   assignment_method = "Batch",
   algorithm = "Thompson",
   period_length = 500,
   prior_periods = "All",
   blocking = FALSE,
   whole_experiment = TRUE,
   perfect_assignment = TRUE,
   conditions = conditions,
   control_augment = 0,
   data_cols = c(
     condition_col = "condition",
     id_col = "ic_case_id"
   )
 ))
}
\references{
Hadad, Vitor, David A. Hirshberg, Ruohan Zhan, Stefan Wager, and Susan Athey. 2021.
“Confidence Intervals for Policy Evaluation in Adaptive Experiments.” \emph{Proceedings of the National Academy of Sciences of the United States of America} 118
(15): e2014602118. \doi{10.1073/pnas.2014602118}.

Kuleshov, Volodymyr, and Doina Precup. 2014. “Algorithms for Multi-Armed Bandit Problems.”
\emph{arXiv}. \doi{10.48550/arXiv.1402.6028}.

Loecher, Thomas Lotze and Markus. 2022.
“Bandit: Functions for Simple a/B Split Test and Multi-Armed Bandit Analysis.”
\url{https://cran.r-project.org/package=bandit}.

Offer‐Westort, Molly, Alexander Coppock, and Donald P. Green. 2021.
“Adaptive Experimental Design: Prospects and Applications in Political Science.”
\emph{American Journal of Political Science} 65 (4): 826–44. \doi{10.1111/ajps.12597}.

Slivkins, Aleksandrs. 2024. “Introduction to Multi-Armed Bandits.” \emph{arXiv}. \doi{10.48550/arXiv.1904.07272}.
}
\seealso{
\code{\link[=multiple_mab_simulation]{multiple_mab_simulation()}}, \code{\link[=summary.mab]{summary.mab()}}, \code{\link[=plot.mab]{plot.mab()}}.
}
